name: Triage

on:
  issues:
    types: [opened]

permissions:
  issues: write

jobs:
  triage:
    name: Auto-triage Issue
    runs-on: ubuntu-latest
    timeout-minutes: 5
    steps:
      - name: Create access token for GitHub App
        uses: actions/create-github-app-token@v2
        id: app-token
        with:
          app-id: ${{ vars.VERCEL_AI_SDK_GITHUB_APP_CLIENT_ID }}
          private-key: ${{ secrets.VERCEL_AI_SDK_GITHUB_APP_PRIVATE_KEY_PKCS8 }}

      - name: Checkout Repository
        uses: actions/checkout@v5

      - name: Fetch existing provider labels
        id: fetch-labels
        run: |
          labels=$(gh api /repos/${{ github.repository }}/labels | jq -r '.[] | select(.name | startswith("provider/")) | .name' | jq -R -s -c 'split("\n")[:-1]')
          echo "labels=$labels" >> $GITHUB_OUTPUT
        env:
          GH_TOKEN: ${{ steps.app-token.outputs.token }}

      - name: Determine appropriate provider labels
        id: classify-issue
        uses: vercel/ai-action@v2
        with:
          model: "openai/gpt-4o"
          api-key: ${{ secrets.AI_GATEWAY_API_KEY }}
          schema: |
            {
              "type": "object",
              "properties": {
                "labels": {
                  "type": "array",
                  "items": {
                    "type": "string",
                    "enum": ${{ steps.fetch-labels.outputs.labels }}
                  },
                  "description": "Array of provider labels that are most relevant to this issue. Choose one or more labels that best match the AI provider mentioned in the issue."
                },
                "confidence": {
                  "type": "number",
                  "minimum": 0,
                  "maximum": 1,
                  "description": "Confidence score for the label classification (0-1)"
                }
              },
              "required": ["labels", "confidence"]
            }
          system: You are an expert software engineer working on classifying GitHub issues for the Vercel AI SDK repository. Your task is to analyze the content of each issue and determine which labels should be assigned.
          prompt: |
              First find out which category label the issue should be assigned. If the category label should be "ai/provider", then also determine which specific provider labels are relevant based on the issue content.

              Available category labels:

              - ai/ui
              - ai/gateway
              - ai/mcp
              - ai/rsc
              - ai/telemetry
              - ai/provider

              Available provider labels:

              ${{ steps.fetch-labels.outputs.labels }}

              Here are the rules to follow when assigning labels:

              - If the issue is about a UI problem (Vue, Angular, React, AI Elements), return ai/ui and no other labels
              - If the issue is about the AI gateway, return ai/gateway and no other labels
              - If the issue is about MCP functionality, return ai/mcp and no other labels
              - If the issue is about RSC functionality, return ai/rsc and no other labels
              - If the issue is about telementry, return ai/telemetry and no other labels
              - If the issue is about a core functionality of the AI SDK, such as generating text, images, audio, or embeddings, return ai/core and no other labels.
              - If the issue is related to an AI provider, add "ai/provider" to the list of returned labels.
              - If the issue is about adding a new provider, do not return any provider labels, only "ai/provider".
              - Look for mentions of specific AI providers like OpenAI, Anthropic, Google, Azure, or their package names (e.g., @ai-sdk/openai, @ai-sdk/anthropic, @ai-sdk/google, @ai-sdk/azure, etc).
              - If no known provider is mentioned, do not try to guess one.
              - If the issue mentions community or third-party providers, use "provider/community". If the issue mentionse a provider but the package name does not begin with "@ai-sdk/", use "provider/community".
              - If it's about OpenAI-compatible APIs, use "provider/openai-compatible", not "provider/openai"
              - Only return "provider/vercel" if the issue is about v0.
              - Multiple labels can be assigned if the issue involves multiple providers, but only if you are confident (>0.8) about their relevance.
              - Distinguish between models and providers. Just because a model from e.g. openai or anthropic is mentioned doensn't mean the provider is the same. The same models can be hosted by different providers.
              - Only assign labels if you're reasonably confident (>0.6) about the relevance
              - If the issue mentiones React Native or Expo, add the "ai/ui" label and "expo" label

              Here is the issue content:

              Issue Title: ${{ github.event.issue.title }}
            
              Issue Body: ${{ github.event.issue.body }}

      - name: Apply provider labels to issue
        if: fromJSON(steps.classify-issue.outputs.json).confidence > 0.6
        run: |
          labels='${{ toJSON(fromJSON(steps.classify-issue.outputs.json).labels) }}'
          if [ "$labels" != "[]" ]; then
            gh api /repos/${{ github.repository }}/issues/${{ github.event.issue.number }}/labels \
              --method POST \
              --input - <<< "{\"labels\": $labels}"
            echo "Applied labels: $labels"
          else
            echo "No labels to apply"
          fi
        env:
          GH_TOKEN: ${{ steps.app-token.outputs.token }}

      - name: Add comment if no provider detected
        if: fromJSON(steps.classify-issue.outputs.json).confidence <= 0.6 && github.event.issue.author_association != 'MEMBER'
        run: |
          gh api /repos/${{ github.repository }}/issues/${{ github.event.issue.number }}/comments \
            --method POST \
            --input - <<< '{
              "body": "ðŸ‘‹ Thanks for opening this issue! I was unable to automatically detect which AI provider this issue relates to. A maintainer will review and apply the appropriate `provider/*` labels manually."
            }'
        env:
          GH_TOKEN: ${{ steps.app-token.outputs.token }}
