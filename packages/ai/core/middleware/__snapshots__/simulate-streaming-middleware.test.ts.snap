// Vitest Snapshot v1, https://vitest.dev/guide/snapshot.html

exports[`simulateStreamingMiddleware > should handle empty text response 1`] = `
[
  {
    "type": "start",
  },
  {
    "request": {},
    "type": "start-step",
    "warnings": [],
  },
  {
    "finishReason": "stop",
    "providerMetadata": undefined,
    "response": {
      "headers": undefined,
      "id": "id-6",
      "modelId": "mock-model-id",
      "timestamp": 2025-01-01T00:00:00.000Z,
    },
    "type": "finish-step",
    "usage": {
      "cachedInputTokens": undefined,
      "inputTokens": 5,
      "outputTokens": 10,
      "reasoningTokens": 3,
      "totalTokens": 18,
    },
  },
  {
    "finishReason": "stop",
    "totalUsage": {
      "cachedInputTokens": undefined,
      "inputTokens": 5,
      "outputTokens": 10,
      "reasoningTokens": 3,
      "totalTokens": 18,
    },
    "type": "finish",
  },
]
`;

exports[`simulateStreamingMiddleware > should pass through warnings from the model 1`] = `
[
  {
    "code": "test_warning",
    "message": "Test warning",
    "type": "other",
  },
]
`;

exports[`simulateStreamingMiddleware > should preserve additional metadata in the response 1`] = `
[
  {
    "type": "start",
  },
  {
    "request": {},
    "type": "start-step",
    "warnings": [],
  },
  {
    "text": "This is a test response",
    "type": "text",
  },
  {
    "finishReason": "stop",
    "providerMetadata": {
      "custom": {
        "key": "value",
      },
    },
    "response": {
      "headers": undefined,
      "id": "id-5",
      "modelId": "mock-model-id",
      "timestamp": 2025-01-01T00:00:00.000Z,
    },
    "type": "finish-step",
    "usage": {
      "cachedInputTokens": undefined,
      "inputTokens": 5,
      "outputTokens": 10,
      "reasoningTokens": 3,
      "totalTokens": 18,
    },
  },
  {
    "finishReason": "stop",
    "totalUsage": {
      "cachedInputTokens": undefined,
      "inputTokens": 5,
      "outputTokens": 10,
      "reasoningTokens": 3,
      "totalTokens": 18,
    },
    "type": "finish",
  },
]
`;

exports[`simulateStreamingMiddleware > should simulate streaming with reasoning as array of text objects 1`] = `
[
  {
    "type": "start",
  },
  {
    "request": {},
    "type": "start-step",
    "warnings": [],
  },
  {
    "text": "This is a test response",
    "type": "text",
  },
  {
    "text": "First reasoning step",
    "type": "reasoning",
  },
  {
    "text": "Second reasoning step",
    "type": "reasoning",
  },
  {
    "providerMetadata": {
      "testProvider": {
        "signature": "abc",
      },
    },
    "text": "",
    "type": "reasoning",
  },
  {
    "finishReason": "stop",
    "providerMetadata": undefined,
    "response": {
      "headers": undefined,
      "id": "id-2",
      "modelId": "mock-model-id",
      "timestamp": 2025-01-01T00:00:00.000Z,
    },
    "type": "finish-step",
    "usage": {
      "cachedInputTokens": undefined,
      "inputTokens": 5,
      "outputTokens": 10,
      "reasoningTokens": 3,
      "totalTokens": 18,
    },
  },
  {
    "finishReason": "stop",
    "totalUsage": {
      "cachedInputTokens": undefined,
      "inputTokens": 5,
      "outputTokens": 10,
      "reasoningTokens": 3,
      "totalTokens": 18,
    },
    "type": "finish",
  },
]
`;

exports[`simulateStreamingMiddleware > should simulate streaming with reasoning as string 1`] = `
[
  {
    "type": "start",
  },
  {
    "request": {},
    "type": "start-step",
    "warnings": [],
  },
  {
    "reasoningType": "text",
    "text": "This is the reasoning process",
    "type": "reasoning",
  },
  {
    "text": "This is a test response",
    "type": "text",
  },
  {
    "finishReason": "stop",
    "providerMetadata": undefined,
    "response": {
      "headers": undefined,
      "id": "id-1",
      "modelId": "mock-model-id",
      "timestamp": 2025-01-01T00:00:00.000Z,
    },
    "type": "finish-step",
    "usage": {
      "cachedInputTokens": undefined,
      "inputTokens": 5,
      "outputTokens": 10,
      "reasoningTokens": 3,
      "totalTokens": 18,
    },
  },
  {
    "finishReason": "stop",
    "totalUsage": {
      "cachedInputTokens": undefined,
      "inputTokens": 5,
      "outputTokens": 10,
      "reasoningTokens": 3,
      "totalTokens": 18,
    },
    "type": "finish",
  },
]
`;

exports[`simulateStreamingMiddleware > should simulate streaming with text response 1`] = `
[
  {
    "type": "start",
  },
  {
    "request": {},
    "type": "start-step",
    "warnings": [],
  },
  {
    "text": "This is a test response",
    "type": "text",
  },
  {
    "finishReason": "stop",
    "providerMetadata": undefined,
    "response": {
      "headers": undefined,
      "id": "id-0",
      "modelId": "mock-model-id",
      "timestamp": 2025-01-01T00:00:00.000Z,
    },
    "type": "finish-step",
    "usage": {
      "cachedInputTokens": undefined,
      "inputTokens": 5,
      "outputTokens": 10,
      "reasoningTokens": 3,
      "totalTokens": 18,
    },
  },
  {
    "finishReason": "stop",
    "totalUsage": {
      "cachedInputTokens": undefined,
      "inputTokens": 5,
      "outputTokens": 10,
      "reasoningTokens": 3,
      "totalTokens": 18,
    },
    "type": "finish",
  },
]
`;

exports[`simulateStreamingMiddleware > should simulate streaming with tool calls 1`] = `
[
  {
    "type": "start",
  },
  {
    "request": {},
    "type": "start-step",
    "warnings": [],
  },
  {
    "text": "This is a test response",
    "type": "text",
  },
  {
    "input": {
      "expression": "2+2",
    },
    "toolCallId": "tool-1",
    "toolName": "calculator",
    "type": "tool-call",
  },
  {
    "input": {
      "location": "New York",
    },
    "toolCallId": "tool-2",
    "toolName": "weather",
    "type": "tool-call",
  },
  {
    "finishReason": "tool-calls",
    "providerMetadata": undefined,
    "response": {
      "headers": undefined,
      "id": "id-4",
      "modelId": "mock-model-id",
      "timestamp": 2025-01-01T00:00:00.000Z,
    },
    "type": "finish-step",
    "usage": {
      "cachedInputTokens": undefined,
      "inputTokens": 5,
      "outputTokens": 10,
      "reasoningTokens": 3,
      "totalTokens": 18,
    },
  },
  {
    "finishReason": "tool-calls",
    "totalUsage": {
      "cachedInputTokens": undefined,
      "inputTokens": 5,
      "outputTokens": 10,
      "reasoningTokens": 3,
      "totalTokens": 18,
    },
    "type": "finish",
  },
]
`;
