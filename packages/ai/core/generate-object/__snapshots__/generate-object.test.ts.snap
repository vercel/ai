// Vitest Snapshot v1, https://vitest.dev/guide/snapshot.html

exports[`telemetry > should not record telemetry inputs / outputs when disabled 1`] = `
[
  {
    "attributes": {
      "ai.model.id": "mock-model-id",
      "ai.model.provider": "mock-provider",
      "ai.operationId": "ai.generateObject",
      "ai.response.finishReason": "stop",
      "ai.settings.maxRetries": 2,
      "ai.settings.output": "object",
      "ai.usage.completionTokens": 20,
      "ai.usage.promptTokens": 10,
      "operation.name": "ai.generateObject",
    },
    "events": [],
    "name": "ai.generateObject",
  },
  {
    "attributes": {
      "ai.model.id": "mock-model-id",
      "ai.model.provider": "mock-provider",
      "ai.operationId": "ai.generateObject.doGenerate",
      "ai.response.finishReason": "stop",
      "ai.response.id": "test-id-from-model",
      "ai.response.model": "test-response-model-id",
      "ai.response.timestamp": "1970-01-01T00:00:10.000Z",
      "ai.settings.maxRetries": 2,
      "ai.usage.completionTokens": 20,
      "ai.usage.promptTokens": 10,
      "gen_ai.request.model": "mock-model-id",
      "gen_ai.response.finish_reasons": [
        "stop",
      ],
      "gen_ai.response.id": "test-id-from-model",
      "gen_ai.response.model": "test-response-model-id",
      "gen_ai.system": "mock-provider",
      "gen_ai.usage.input_tokens": 10,
      "gen_ai.usage.output_tokens": 20,
      "operation.name": "ai.generateObject.doGenerate",
    },
    "events": [],
    "name": "ai.generateObject.doGenerate",
  },
]
`;

exports[`telemetry > should record telemetry data when enabled 1`] = `
[
  {
    "attributes": {
      "ai.model.id": "mock-model-id",
      "ai.model.provider": "mock-provider",
      "ai.operationId": "ai.generateObject",
      "ai.prompt": "{"prompt":"prompt"}",
      "ai.request.headers.header1": "value1",
      "ai.request.headers.header2": "value2",
      "ai.response.finishReason": "stop",
      "ai.response.object": "{"content":"Hello, world!"}",
      "ai.schema": "{"type":"object","properties":{"content":{"type":"string"}},"required":["content"],"additionalProperties":false,"$schema":"http://json-schema.org/draft-07/schema#"}",
      "ai.schema.description": "test description",
      "ai.schema.name": "test-name",
      "ai.settings.frequencyPenalty": 0.3,
      "ai.settings.maxRetries": 2,
      "ai.settings.output": "object",
      "ai.settings.presencePenalty": 0.4,
      "ai.settings.temperature": 0.5,
      "ai.settings.topK": 0.1,
      "ai.settings.topP": 0.2,
      "ai.telemetry.functionId": "test-function-id",
      "ai.telemetry.metadata.test1": "value1",
      "ai.telemetry.metadata.test2": false,
      "ai.usage.completionTokens": 20,
      "ai.usage.promptTokens": 10,
      "operation.name": "ai.generateObject test-function-id",
      "resource.name": "test-function-id",
    },
    "events": [],
    "name": "ai.generateObject",
  },
  {
    "attributes": {
      "ai.model.id": "mock-model-id",
      "ai.model.provider": "mock-provider",
      "ai.operationId": "ai.generateObject.doGenerate",
      "ai.prompt.messages": "[{"role":"user","content":[{"type":"text","text":"prompt"}]}]",
      "ai.request.headers.header1": "value1",
      "ai.request.headers.header2": "value2",
      "ai.response.finishReason": "stop",
      "ai.response.id": "test-id-from-model",
      "ai.response.model": "test-response-model-id",
      "ai.response.object": "{ "content": "Hello, world!" }",
      "ai.response.timestamp": "1970-01-01T00:00:10.000Z",
      "ai.settings.frequencyPenalty": 0.3,
      "ai.settings.maxRetries": 2,
      "ai.settings.presencePenalty": 0.4,
      "ai.settings.temperature": 0.5,
      "ai.settings.topK": 0.1,
      "ai.settings.topP": 0.2,
      "ai.telemetry.functionId": "test-function-id",
      "ai.telemetry.metadata.test1": "value1",
      "ai.telemetry.metadata.test2": false,
      "ai.usage.completionTokens": 20,
      "ai.usage.promptTokens": 10,
      "gen_ai.request.frequency_penalty": 0.3,
      "gen_ai.request.model": "mock-model-id",
      "gen_ai.request.presence_penalty": 0.4,
      "gen_ai.request.temperature": 0.5,
      "gen_ai.request.top_k": 0.1,
      "gen_ai.request.top_p": 0.2,
      "gen_ai.response.finish_reasons": [
        "stop",
      ],
      "gen_ai.response.id": "test-id-from-model",
      "gen_ai.response.model": "test-response-model-id",
      "gen_ai.system": "mock-provider",
      "gen_ai.usage.input_tokens": 10,
      "gen_ai.usage.output_tokens": 20,
      "operation.name": "ai.generateObject.doGenerate test-function-id",
      "resource.name": "test-function-id",
    },
    "events": [],
    "name": "ai.generateObject.doGenerate",
  },
]
`;
